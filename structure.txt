ðŸ“‚ backend
 â”œâ”€â”€ ðŸ“‚ config              # Configuration files (DB connection, etc.)
 â”‚   â”œâ”€â”€ db.js              # MongoDB connection
 â”‚   â”œâ”€â”€ env.js             # (Optional) Environment variables setup
 â”‚
 â”œâ”€â”€ ðŸ“‚ models              # Mongoose models (schema)
 â”‚   â”œâ”€â”€ User.js            # User schema
 â”‚   â”œâ”€â”€ Product.js         # Product schema
 â”‚
 â”œâ”€â”€ ðŸ“‚ controllers         # Controllers for handling requests
 â”‚   â”œâ”€â”€ authController.js  # Login, Register, Token management
 â”‚   â”œâ”€â”€ userController.js  # Get, Update, Delete users
 â”‚
 â”œâ”€â”€ ðŸ“‚ services            # Business logic (for better separation)
 â”‚   â”œâ”€â”€ authService.js     # Handles JWT, bcrypt, etc.
 â”‚   â”œâ”€â”€ userService.js     # Handles user-related logic
 â”‚
 â”œâ”€â”€ ðŸ“‚ routes              # API routes
 â”‚   â”œâ”€â”€ authRoutes.js      # Routes for authentication
 â”‚   â”œâ”€â”€ userRoutes.js      # Routes for user operations
 â”‚
 â”œâ”€â”€ ðŸ“‚ middleware          # Middleware (Auth, Error Handling)
 â”‚   â”œâ”€â”€ authMiddleware.js  # Protect routes (JWT verification)
 â”‚   â”œâ”€â”€ errorHandler.js    # Global error handling
 â”‚
 â”œâ”€â”€ ðŸ“‚ utils               # Utility functions/helpers
 â”‚   â”œâ”€â”€ generateToken.js   # Generate JWT tokens
 â”‚   â”œâ”€â”€ sendEmail.js       # (Optional) Email utility
 â”‚
 â”œâ”€â”€ server.js              # Main entry point
 â”œâ”€â”€ package.json           
